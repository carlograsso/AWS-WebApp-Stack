AWSTemplateFormatVersion: "2010-09-09"
Description: Carlo Grasso, Network stack for an high availability web app deployment.
Parameters:
  EnvironmentName:
    Description: "Will be prefixed to all resources names."
    Type: String
  VpcCIDR:
    Description: Ip range for the VPC (CIDR notation)
    Type: String
  PublicSubnet1CIDR:
    Description: Ip range for the public subnet in the first Availability Zone
    Type: String
  PublicSubnet2CIDR:
    Description: Ip range for the public subnet in the second Availability Zone
    Type: String
  PrivateSubnet1CIDR:
    Description: Ip range for the private subnet in the first Availability Zone
    Type: String
  PrivateSubnet2CIDR:
    Description: Ip range for the private subnet in the second Availability Zone
    Type: String
Resources:
  # DEFINING THE WEB APP VIRTUAL PRIVATE CLOUD
  appVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - VPC
  # DEFINING THE INTERNET GATEWAY FOR THE VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - InternetGateway
  vpcInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref appVPC
  # DEFINING THE PUBLIC/PRIVATE SUBNETS STRUCTURE
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - PublicSubnet AV1
      VpcId: !Ref appVPC
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - PublicSubnet AV2
      VpcId: !Ref appVPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - PrivateSubnet AV1
      VpcId: !Ref appVPC
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - PrivateSubnet AV2
      VpcId: !Ref appVPC
  # DEFINING NatGateways
  NatGateway1EIP:
    DependsOn: vpcInternetGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - ElasticIp NatGateway AV1
  NatGateway2EIP:
    DependsOn: vpcInternetGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - ElasticIp NatGateway AV2
  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - NatGateway1EIP
          - AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - NatGateway in AV1
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - NatGateway2EIP
          - AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - NatGateway in AV2
  # DEFINING ROUTING ROULES
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref appVPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - Public RouteTable
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: vpcInternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref appVPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - Private RouteTable for AZ1
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref appVPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - Private RouteTable for AZ2
  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn: vpcInternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref PrivateRouteTable1
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1
  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: vpcInternetGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref PrivateRouteTable2
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2
# SCRIPT OUTPUTS
Outputs:
  VPC:
    Description: the created vpc
    Value: !Ref appVPC
    Export:
      Name: !Sub ${EnvironmentName}-VpcId
  PublicSubnets:
    Description: List of the public subnets
    Value: !Join [",", [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: !Sub ${EnvironmentName}-PubSubNets
  PrivateSubnets:
    Description: List of the private subnets
    Value: !Join [",", [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: !Sub ${EnvironmentName}-PrivSubNets
  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-Pub1SubNet

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-Pub2SubNet

  PrivateSubnet1:
    Description: A reference to the private subnet in the 1st Availability Zone
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-Priv1SubNet

  PrivateSubnet2:
    Description: A reference to the private subnet in the 2nd Availability Zone
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-Priv2SubNet
